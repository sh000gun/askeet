security:
    encoders:
        askeet_encoder:
            id: 'App\Security\AskeetPasswordEncoder'

        App\Entity\User: askeet_encoder

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
         # users_in_memory: { memory: null }
        user_in_propel:
            propel:
                class: App\Entity\User
                property: nickname

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api/ 
            http_basic:
                realm: "Secured API"
                provider: user_in_propel
        main:
            anonymous: true
            lazy: true
            # provider: users_in_memory
            provider: user_in_propel
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
        
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/question/add, roles: ROLE_SUBSCRIBER }
        - { path: ^/api/, roles: ROLE_SUBSCRIBER }
